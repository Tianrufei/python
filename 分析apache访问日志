(函数)
import re
def count_patt(fname,patt):
    patt_dict = {}
    cpatt = re.compile(patt)  #编译模式,提升效率
    
    with open(fname) as fobj:
        for line in fobj:
            m = cpatt.search(line)
            if m:
                key = m.group()
                patt_dict[key] = patt_dict.get(key,0) +1
    return patt_dict
if __name__ == '__main__':
    fname = 'access_log'
    ip = '^(\d+\.){3}\d+'
    br = 'Firefox|MSIE|Chrome'
    result1 = count_patt(fname,ip)
    result2 = count_patt(fname,br)
    print(result1)
    print(result2)
    # 进行排序,可以方便看出访问最多的是哪个
    result3 = list(result1.items())
    result3.sort(key=lambda seq: seq[-1], reverse=True)
    print(result3)
    
 (class)
 import re

class CountPatt:
    def __init__(self,fname):
        self.fname = fname

    def count_patt(self, patt):
        patt_dict = {}
        cpatt = re.compile(patt)  # 编译模式,提升效率

        with open(self.fname) as fobj:
            for line in fobj:
                m = cpatt.search(line)
                if m:
                    key = m.group()
                    patt_dict[key] = patt_dict.get(key, 0) + 1
        return patt_dict


if __name__ == '__main__':
    fname = 'access1_log'
    ip = '^(\d+\.){3}\d+'
    cp = CountPatt(fname)
    br = 'Firefox|MSIE|Chrome'
    result1 = cp.count_patt(ip)
    result2 = cp.count_patt(br)
    print(result1)
    print(result2)
